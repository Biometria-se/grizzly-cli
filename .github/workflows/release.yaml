name: release

on:
  workflow_dispatch:
      inputs:
        level:
          type: choice
          description: 'Version level increment'
          options:
            - patch
            - minor
            - major
          required: true
          default: 'patch'
        publish:
          type: boolean
          description: 'Publish package'
          required: true
          default: false

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
    - name: setup environment
      run: |
        sudo ln -fs /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
        sudo ln -fs /usr/share/zoneinfo/Europe/Stockholm /etc/timezone
        echo $HOME/.local/bin >> $GITHUB_PATH

    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main

    - name: setup python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: get latest tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      with:
        semver_only: true
        initial_version: 'v0.0.0'
        with_initial_version: true

    - name: next version
      uses: actions-ecosystem/action-bump-semver@v1
      id: next-version
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: ${{ github.event.inputs.level }}

    - name: create release tag
      run: |
        echo "current version is ${{ steps.get-latest-tag.outputs.tag }}"
        echo "next version is ${{ steps.next-version.outputs.new_version }}"
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag -a "${{ steps.next-version.outputs.new_version }}" -m "Release ${{ steps.next-version.outputs.new_version }}"

    - name: install python dependencies
      run: |
        python -m pip install .[ci]

    - name: build package
      id: build
      run: python -m build

    - name: verify package
      id: verify
      working-directory: ./dist/
      env:
        VERSION: ${{ steps.next-version.outputs.new_version }}
      run: |
        set -e
        ls -l grizzly?loadtester?cli-${VERSION#v}*
        test -f grizzly-loadtester-cli-${VERSION#v}.tar.gz
        test -f grizzly_loadtester_cli-${VERSION#v}-py3-none-any.whl

    - name: publish package
      id: publish
      if: ${{ github.event.inputs.publish == 'true' }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        TWINE_NON_INTERACTIVE: true
        VERSION: ${{ steps.next-version.outputs.new_version }}
      run: python -m twine upload dist/grizzly?loadtester?cli-${VERSION#v}*

    - name: push release tag
      id: release-tag
      if: ${{ github.event.inputs.publish == 'true' }}
      run: git push origin "${{ steps.next-version.outputs.new_version }}"
